# frozen_string_literal: true

require "resolv"
require "uri"

module Kenna
  module Toolkit
    module Edgescan
      class EdgescanVulnerability
        attr_accessor :asset, :data

        def initialize(asset, vulnerability)
          @asset = asset
          @data = vulnerability
        end

        def location
          data["location"]
        end

        def to_kenna_vulnerability
          {
            "scanner_type" => scanner_type,
            "scanner_identifier" => data["definition_id"],
            "created_at" => data["created_at"],
            "last_seen_at" => data["updated_at"],
            "scanner_score" => data["threat"] * 2,
            "status" => data["status"],
            "details" => details
          }
        end

        def to_kenna_finding
          {
            "scanner_identifier" => data["definition_id"],
            "scanner_type" => scanner_type,
            "created_at" => data["created_at"],
            "last_seen_at" => data["updated_at"],
            "severity" => data["threat"] * 2,
            "additional_fields" => {
              "status" => data["status"],
              "details" => details
            }
          }
        end

        def to_corresponding_kenna_asset
          base = { "external_id" => external_asset_id, "tags" => asset.tags }
          if ip_address?
            base["ip"] = location
          elsif url?
            base["url"] = location
          else
            base["hostname"] = location
          end
          base["application"] = asset.application_id if asset.application? && url?

          base
        end

        def external_asset_id
          "ES#{asset.id} #{location}"
        end

        private

        def scanner_type
          data["layer"] == "application" ? "EdgescanApp" : "EdgescanNet"
        end

        def details
          data["details"].map { |detail| "#{detail_title(detail)}#{detail['src']}" }
                         .join("\n\n====================\n\n")
        end

        def detail_title(detail)
          type = detail["type"]
          return "#{detail['protocol']}:#{detail['port']}\n\n" if type == "service"
          return "Vulnerable #{detail['parameter_type']}: #{detail['parameter_name']}\n\n" if type == "attack_vector"

          ""
        end

        def ip_address?
          !!(location =~ Regexp.union([Resolv::IPv4::Regex, Resolv::IPv6::Regex]))
        end

        def url?
          !!(location =~ URI::DEFAULT_PARSER.make_regexp)
        end
      end
    end
  end
end
