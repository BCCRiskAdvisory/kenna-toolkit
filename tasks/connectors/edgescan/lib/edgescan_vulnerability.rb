# frozen_string_literal: true

require "resolv"
require "uri"

module Kenna
  module Toolkit
    module Edgescan
      class EdgescanVulnerability
        attr_accessor :asset, :data, :host

        def initialize(asset, vulnerability, host)
          @asset = asset
          @data = vulnerability
          @host = host
        end

        def location
          data["location"]
        end

        def to_kenna_vulnerability
          {
            "scanner_type" => scanner_type,
            "scanner_identifier" => data["definition_id"],
            "created_at" => data["created_at"],
            "last_seen_at" => data["updated_at"],
            "scanner_score" => data["threat"] * 2,
            "status" => data["status"],
            "details" => details
          }
        end

        def to_kenna_finding
          {
            "scanner_identifier" => data["definition_id"],
            "scanner_type" => scanner_type,
            "created_at" => data["created_at"],
            "last_seen_at" => data["updated_at"],
            "severity" => data["threat"] * 2,
            "additional_fields" => {
              "status" => data["status"],
              "details" => details
            }
          }
        end

        def to_kenna_asset
          base = {
            "external_id" => external_asset_id,
            "tags" => asset["tags"],
            "application" => asset_application_id
          }
          if ip_address?
            base["ip"] = location
          elsif url?
            base["url"] = location
          else
            base["hostname"] = location
          end
          if host
            base["ip"] = host["location"]
            base["hostname"] = host["hostnames"]&.first
            base["os"] = host["os_name"]
          end
          base
        end

        def external_asset_id
          if host
            "ES#{asset['id']} #{host['location']}"
          else
            "ES#{asset['id']} #{location}"
          end
        end

        private

        def scanner_type
          data["layer"] == "application" ? "EdgescanApp" : "EdgescanNet"
        end

        def details
          data["details"].map { |detail| "#{detail_title(detail)}#{detail['src']}" }
                         .join("\n\n====================\n\n")
        end

        def detail_title(detail)
          type = detail["type"]
          return "#{detail['protocol']}:#{detail['port']}\n\n" if type == "service"
          return "Vulnerable #{detail['parameter_type']}: #{detail['parameter_name']}\n\n" if type == "attack_vector"

          ""
        end

        def ip_address?
          !!(location =~ Regexp.union([Resolv::IPv4::Regex, Resolv::IPv6::Regex]))
        end

        def url?
          !!(location =~ URI::DEFAULT_PARSER.make_regexp)
        end

        def asset_application_id
          "#{asset['name']} (ES#{asset['id']})" if asset_application? && url?
        end

        def asset_application?
          asset["type"] == "app"
        end
      end
    end
  end
end
